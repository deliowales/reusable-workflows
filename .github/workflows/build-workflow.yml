name: Build Workflow

env:
  REGISTRY: ghcr.io

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
      S3_BUCKET_NAME:
        required: true
        type: string
      IAM_ROLE:
        required: true
        type: string
    secrets:
      GITHUB_MACHINE_TOKEN:
        required: true
      CD_API_KEY:
        required: true
      CD_SERVER:
        required: true
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          rm -rf .npmrc
          echo "@deliowales:registry=https://npm.pkg.github.com/" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_MACHINE_TOKEN }}" >> .npmrc

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.IAM_ROLE }}
          aws-region: eu-west-1
          role-session-name: GithubAction

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/deliowales/${{ inputs.SERVICE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get release info
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Install Octopus CLI üêô
        uses: OctopusDeploy/install-octopus-cli-action@v1
        with:
          version: '*'

      - name: Package Helm
        run: |
          octo pack --id="Helm" --format="Zip" --version="${{ steps.get_release.outputs.tag_name }}" --basePath="$GITHUB_WORKSPACE/helm" --outFolder="$GITHUB_WORKSPACE"

      - name: Push a package to Octopus Deploy üêô
        uses: OctopusDeploy/push-package-action@v1.1.2
        with:
          api_key: ${{ secrets.CD_API_KEY }}
          packages: 'helm'
          server: ${{ secrets.CD_SERVER }}
